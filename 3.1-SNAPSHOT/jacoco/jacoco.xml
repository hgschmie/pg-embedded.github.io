<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="pg-embedded"><sessioninfo id="roci.dyn.intermeta.com-47a07bd9" start="1636870517290" dump="1636870521550"/><sessioninfo id="roci.dyn.intermeta.com-c7d85763" start="1636870517297" dump="1636870525724"/><sessioninfo id="roci.dyn.intermeta.com-206de387" start="1636870517293" dump="1636870526031"/><sessioninfo id="roci.dyn.intermeta.com-8d92746d" start="1636870517314" dump="1636870528748"/><sessioninfo id="roci.dyn.intermeta.com-b175222a" start="1636870517285" dump="1636870529030"/><sessioninfo id="roci.dyn.intermeta.com-4bedde29" start="1636870517318" dump="1636870529081"/><sessioninfo id="roci.dyn.intermeta.com-8bc2c34e" start="1636870517289" dump="1636870529226"/><sessioninfo id="roci.dyn.intermeta.com-f9fe94df" start="1636870517283" dump="1636870531253"/><sessioninfo id="roci.dyn.intermeta.com-8497d0a2" start="1636870517285" dump="1636870531646"/><sessioninfo id="roci.dyn.intermeta.com-2a84879a" start="1636870517303" dump="1636870533899"/><package name="de/softwareforge/testing/postgres/embedded"><class name="de/softwareforge/testing/postgres/embedded/EmbeddedUtil" sourcefilename="EmbeddedUtil.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWorkingDirectory" desc="()Ljava/io/File;" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileBaseName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failIfNullBytePresent" desc="(Ljava/lang/String;)V" line="86"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOfLastSeparator" desc="(Ljava/lang/String;)I" line="94"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mkdirs" desc="(Ljava/io/File;)V" line="107"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmdirs" desc="(Ljava/io/File;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatDuration" desc="(Ljava/time/Duration;)Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="15" covered="71"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allocatePort" desc="()I" line="155"><counter type="INSTRUCTION" missed="12" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomAlphaNumeric" desc="(I)Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomLowercase" desc="(I)Ljava/lang/String;" line="171"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sequence" desc="(CI)Ljava/lang/String;" line="175"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomString" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSystemProperty" desc="(Ljava/lang/String;)Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOsMatchesName" desc="(Ljava/lang/String;)Z" line="200"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="5" covered="40"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="273"/><counter type="BRANCH" missed="12" covered="22"/><counter type="LINE" missed="14" covered="67"/><counter type="COMPLEXITY" missed="12" covered="21"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/DatabaseManager$InstanceProvider" sourcefilename="DatabaseManager.java"><method name="start" desc="()V" line="120"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="124"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/DatabasePreparer" sourcefilename="DatabasePreparer.java"><method name="lambda$static$0" desc="(Ljavax/sql/DataSource;)V" line="29"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/softwareforge/testing/postgres/embedded/DatabaseManager$DatabaseManagerBuilder" sourcefilename="DatabaseManager.java"><method name="&lt;init&gt;" desc="(Z)V" line="246"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseManager;" line="251"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/DatabaseInfo$Builder" sourcefilename="DatabaseInfo.java"><method name="&lt;init&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addProperty" desc="(Ljava/lang/String;Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/DatabaseInfo$Builder;" line="94"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/ProcessOutputLogger" sourcefilename="ProcessOutputLogger.java"><method name="&lt;init&gt;" desc="(Lorg/slf4j/Logger;Ljava/lang/Process;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="45"><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logOutput" desc="(Lorg/slf4j/Logger;Ljava/lang/String;Ljava/lang/Process;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="51"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/DatabaseInfo" sourcefilename="DatabaseInfo.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseInfo$Builder;" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forException" desc="(Ljava/sql/SQLException;)Lde/softwareforge/testing/postgres/embedded/DatabaseInfo;" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asJdbcUrl" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asDataSource" desc="()Ljavax/sql/DataSource;" line="66"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asJdbcUrl$0" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="90"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/EmbeddedPostgres$BuilderCustomizer" sourcefilename="EmbeddedPostgres.java"/><class name="de/softwareforge/testing/postgres/embedded/DatabaseManager" sourcefilename="DatabaseManager.java"><method name="&lt;init&gt;" desc="(Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer;Ljava/util/Set;Z)V" line="46"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiDatabases" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleDatabase" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseManager;" line="73"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDatabaseInfo" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseInfo;" line="102"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmbeddedPostgres" desc="()Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres;" line="113"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDatabase" desc="(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$start$0" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseInfo;" line="84"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="164"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="36"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/TarXzCompressedBinaryManager$1" sourcefilename="TarXzCompressedBinaryManager.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/util/concurrent/Phaser;)V" line="189"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="completed" desc="(Ljava/lang/Integer;Ljava/nio/channels/Channel;)V" line="192"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="failed" desc="(Ljava/lang/Throwable;Ljava/nio/channels/Channel;)V" line="197"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeChannel" desc="(Ljava/nio/channels/Channel;)V" line="203"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/softwareforge/testing/postgres/embedded/AutoValue_DatabaseInfo" sourcefilename="AutoValue_DatabaseInfo.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Lcom/google/common/collect/ImmutableMap;Ljava/util/Optional;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dbName" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="port" desc="()I" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="user" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="properties" desc="()Lcom/google/common/collect/ImmutableMap;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exception" desc="()Ljava/util/Optional;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="4" covered="42"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="88"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="75"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="15" covered="20"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/DatabaseManager$Builder" sourcefilename="DatabaseManager.java"><method name="&lt;init&gt;" desc="(Z)V" line="202"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withPreparer" desc="(Lde/softwareforge/testing/postgres/embedded/DatabasePreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="215"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withDataSourcePreparer" desc="(Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="221"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withInstancePreparer" desc="(Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="226"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withCustomizer" desc="(Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$BuilderCustomizer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="235"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="30"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/NativeBinaryManager" sourcefilename="NativeBinaryManager.java"/><class name="de/softwareforge/testing/postgres/embedded/EmbeddedPostgres" sourcefilename="EmbeddedPostgres.java"><method name="defaultInstance" desc="()Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderWithDefaults" desc="()Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="129"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/io/File;Ljava/io/File;ZLjava/util/Map;Ljava/util/Map;Ljava/util/Map;ILjava/lang/ProcessBuilder$Redirect;Ljava/lang/ProcessBuilder$Redirect;Ljava/time/Duration;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDefaultDatabaseInfo" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseInfo;" line="173"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTemplateDataSource" desc="()Ljavax/sql/DataSource;" line="183"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDefaultDataSource" desc="()Ljavax/sql/DataSource;" line="190"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDataSource" desc="(Ljava/lang/String;Ljava/lang/String;)Ljavax/sql/DataSource;" line="200"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDataSource" desc="(Ljava/lang/String;Ljava/lang/String;ILjava/util/Map;)Ljavax/sql/DataSource;" line="204"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPort" desc="()I" line="226"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConnectionProperties" desc="()Lcom/google/common/collect/ImmutableMap;" line="233"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instanceId" desc="()Ljava/lang/String;" line="241"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="246"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="251"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="263"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="boot" desc="()V" line="270"><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lock" desc="()V" line="283"><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unlock" desc="()V" line="289"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initDatabase" desc="()V" line="296"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startDatabase" desc="()V" line="308"><counter type="INSTRUCTION" missed="1" covered="112"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stopDatabase" desc="(Ljava/io/File;)V" line="330"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInitOptions" desc="()Ljava/util/List;" line="342"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLocaleOptions" desc="()Ljava/util/List;" line="357"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="waitForServerStartup" desc="()Z" line="370"><counter type="INSTRUCTION" missed="22" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verifyReady" desc="()Z" line="395"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCloserThread" desc="()Ljava/lang/Thread;" line="415"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="432"><counter type="INSTRUCTION" missed="35" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataDirectory" desc="()Ljava/io/File;" line="457"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocaleConfiguration" desc="()Ljava/util/Map;" line="462"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanOldDataDirectories" desc="(Ljava/io/File;)V" line="468"><counter type="INSTRUCTION" missed="68" covered="49"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="18" covered="12"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pgBin" desc="(Ljava/lang/String;)Ljava/lang/String;" line="519"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spawn" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/Process;" line="524"><counter type="INSTRUCTION" missed="8" covered="49"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="system" desc="(Ljava/util/List;)Lcom/google/common/base/Stopwatch;" line="539"><counter type="INSTRUCTION" missed="38" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$newCloserThread$2" desc="()V" line="417"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createLocaleOptions$1" desc="(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljava/lang/String;)V" line="360"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createInitOptions$0" desc="(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljava/lang/String;)V" line="348"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="231" covered="855"/><counter type="BRANCH" missed="27" covered="29"/><counter type="LINE" missed="45" covered="169"/><counter type="COMPLEXITY" missed="24" covered="41"/><counter type="METHOD" missed="3" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/FlywayPreparer" sourcefilename="FlywayPreparer.java"><method name="forClasspathLocation" desc="([Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/FlywayPreparer;" line="34"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="customize" desc="(Ljava/util/function/Consumer;)Lde/softwareforge/testing/postgres/embedded/FlywayPreparer;" line="43"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepare" desc="(Ljavax/sql/DataSource;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$prepare$1" desc="(Lorg/flywaydb/core/api/configuration/FluentConfiguration;Ljava/util/function/Consumer;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forClasspathLocation$0" desc="([Ljava/lang/String;Lorg/flywaydb/core/api/configuration/FluentConfiguration;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/ZonkyIOPostgresLocator" sourcefilename="ZonkyIOPostgresLocator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/io/InputStream;" line="50"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="60"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="72"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeArchitecture" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeOS" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="7" covered="11"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="114"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="6" covered="23"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/DatabaseManager$InstanceProviderPipeline" sourcefilename="DatabaseManager.java"><method name="&lt;init&gt;" desc="(Lde/softwareforge/testing/postgres/embedded/DatabaseManager;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="()V" line="147"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="159"><counter type="INSTRUCTION" missed="17" covered="44"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseInfo;" line="184"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="95"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="26"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/TarXzCompressedBinaryManager" sourcefilename="TarXzCompressedBinaryManager.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/function/Supplier;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocation" desc="()Ljava/io/File;" line="97"><counter type="INSTRUCTION" missed="85" covered="94"/><counter type="BRANCH" missed="15" covered="5"/><counter type="LINE" missed="20" covered="18"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractTxz" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="162"><counter type="INSTRUCTION" missed="187" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="272" covered="137"/><counter type="BRANCH" missed="37" covered="5"/><counter type="LINE" missed="51" covered="27"/><counter type="COMPLEXITY" missed="21" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/AutoValue_DatabaseInfo$Builder" sourcefilename="AutoValue_DatabaseInfo.java"><method name="&lt;init&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dbName" desc="(Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/DatabaseInfo$Builder;" line="113"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="port" desc="(I)Lde/softwareforge/testing/postgres/embedded/DatabaseInfo$Builder;" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="user" desc="(Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/DatabaseInfo$Builder;" line="126"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="properties" desc="(Lcom/google/common/collect/ImmutableMap;)Lde/softwareforge/testing/postgres/embedded/DatabaseInfo$Builder;" line="134"><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertiesBuilder" desc="()Lcom/google/common/collect/ImmutableMap$Builder;" line="145"><counter type="INSTRUCTION" missed="12" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exception" desc="(Ljava/sql/SQLException;)Lde/softwareforge/testing/postgres/embedded/DatabaseInfo$Builder;" line="158"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseInfo;" line="163"><counter type="INSTRUCTION" missed="31" covered="39"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="63" covered="94"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="15" covered="28"/><counter type="COMPLEXITY" missed="12" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder" sourcefilename="EmbeddedPostgres.java"><method name="&lt;init&gt;" desc="()V" line="583"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withDefaults" desc="()Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="611"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setServerStartupWait" desc="(Ljava/time/Duration;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="624"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRemoveDataOnShutdown" desc="(Z)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="639"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDataDirectory" desc="(Ljava/nio/file/Path;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="651"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDataDirectory" desc="(Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="663"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDataDirectory" desc="(Ljava/io/File;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="675"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addServerConfiguration" desc="(Ljava/lang/String;Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="691"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addLocaleConfiguration" desc="(Ljava/lang/String;Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="702"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addInitDbConfiguration" desc="(Ljava/lang/String;Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="721"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConnectionProperty" desc="(Ljava/lang/String;Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="736"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInstallationBaseDirectory" desc="(Ljava/io/File;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="752"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPort" desc="(I)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="766"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setErrorRedirector" desc="(Ljava/lang/ProcessBuilder$Redirect;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="778"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOutputRedirector" desc="(Ljava/lang/ProcessBuilder$Redirect;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="789"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNativeBinaryManager" desc="(Lde/softwareforge/testing/postgres/embedded/NativeBinaryManager;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="802"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="useLocalPostgresInstallation" desc="(Ljava/io/File;)Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres$Builder;" line="815"><counter type="INSTRUCTION" missed="1" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres;" line="828"><counter type="INSTRUCTION" missed="3" covered="76"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$useLocalPostgresInstallation$0" desc="(Ljava/io/File;)Ljava/io/File;" line="817"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="217"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="27" covered="50"/><counter type="COMPLEXITY" missed="15" covered="12"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer" sourcefilename="EmbeddedPostgresPreparer.java"><method name="noOp" desc="()Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer;" line="37"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$noOp$0" desc="(Ljava/lang/Object;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NativeBinaryManager.java"/><sourcefile name="FlywayPreparer.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DatabasePreparer.java"><line nr="29" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DatabaseManager.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="1" cb="1"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="16" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="1" cb="1"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="1" cb="1"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="1" cb="1"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="2"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="17" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="1" cb="1"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="15" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="7" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="9" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="306"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="16" covered="76"/><counter type="COMPLEXITY" missed="8" covered="25"/><counter type="METHOD" missed="3" covered="21"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="EmbeddedPostgres.java"><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="17" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="9" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="200" mi="8" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="8" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="11" mb="0" cb="2"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="2" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="7" ci="0" mb="4" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="9" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="8" ci="3" mb="3" cb="1"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="1" ci="9" mb="1" cb="1"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="1" cb="1"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="28" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="10" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="13" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="1" ci="9" mb="1" cb="1"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="19" mb="0" cb="0"/><line nr="312" mi="0" ci="9" mb="0" cb="0"/><line nr="313" mi="0" ci="11" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="19" mb="0" cb="0"/><line nr="321" mi="0" ci="13" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="13" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="18" mb="0" cb="0"/><line nr="332" mi="0" ci="26" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="13" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="13" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="2"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="7" mb="0" cb="0"/><line nr="373" mi="0" ci="6" mb="1" cb="1"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="0" cb="0"/><line nr="380" mi="5" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="390" mi="9" ci="0" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="12" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="408" mi="1" ci="9" mb="1" cb="1"/><line nr="409" mi="1" ci="7" mb="1" cb="1"/><line nr="410" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="6" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="418" mi="1" ci="0" mb="0" cb="0"/><line nr="419" mi="5" ci="0" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="2"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="1" ci="0" mb="0" cb="0"/><line nr="439" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="1" cb="1"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="1" ci="0" mb="0" cb="0"/><line nr="448" mi="14" ci="0" mb="0" cb="0"/><line nr="449" mi="1" ci="1" mb="0" cb="0"/><line nr="451" mi="13" ci="0" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="469" mi="0" ci="2" mb="1" cb="1"/><line nr="470" mi="1" ci="0" mb="0" cb="0"/><line nr="472" mi="0" ci="16" mb="0" cb="2"/><line nr="473" mi="0" ci="3" mb="1" cb="1"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="478" mi="0" ci="5" mb="0" cb="2"/><line nr="479" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="2"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="491" mi="0" ci="7" mb="1" cb="1"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="495" mi="5" ci="0" mb="0" cb="0"/><line nr="496" mi="4" ci="0" mb="0" cb="0"/><line nr="497" mi="2" ci="0" mb="2" cb="0"/><line nr="498" mi="11" ci="0" mb="0" cb="0"/><line nr="499" mi="7" ci="0" mb="2" cb="0"/><line nr="501" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="4" ci="0" mb="0" cb="0"/><line nr="503" mi="1" ci="0" mb="0" cb="0"/><line nr="504" mi="12" ci="0" mb="0" cb="0"/><line nr="505" mi="1" ci="0" mb="0" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="509" mi="1" ci="0" mb="0" cb="0"/><line nr="511" mi="5" ci="0" mb="0" cb="0"/><line nr="512" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="5" ci="0" mb="0" cb="0"/><line nr="514" mi="2" ci="0" mb="0" cb="0"/><line nr="516" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="2" ci="4" mb="1" cb="1"/><line nr="520" mi="0" ci="10" mb="0" cb="0"/><line nr="524" mi="0" ci="5" mb="0" cb="0"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="526" mi="0" ci="5" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="528" mi="0" ci="3" mb="0" cb="0"/><line nr="530" mi="8" ci="5" mb="1" cb="1"/><line nr="531" mi="0" ci="15" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="539" mi="1" ci="7" mb="1" cb="1"/><line nr="540" mi="0" ci="6" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="543" mi="0" ci="5" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="1" cb="1"/><line nr="546" mi="17" ci="0" mb="0" cb="0"/><line nr="547" mi="15" ci="0" mb="0" cb="0"/><line nr="548" mi="2" ci="0" mb="0" cb="0"/><line nr="551" mi="1" ci="0" mb="0" cb="0"/><line nr="552" mi="2" ci="0" mb="0" cb="0"/><line nr="553" mi="0" ci="1" mb="0" cb="0"/><line nr="555" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="3" mb="0" cb="0"/><line nr="586" mi="0" ci="5" mb="0" cb="0"/><line nr="587" mi="0" ci="5" mb="0" cb="0"/><line nr="588" mi="0" ci="3" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="3" mb="0" cb="0"/><line nr="592" mi="0" ci="3" mb="0" cb="0"/><line nr="594" mi="0" ci="3" mb="0" cb="0"/><line nr="595" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="611" mi="0" ci="6" mb="0" cb="0"/><line nr="612" mi="0" ci="6" mb="0" cb="0"/><line nr="613" mi="0" ci="6" mb="0" cb="0"/><line nr="614" mi="0" ci="2" mb="0" cb="0"/><line nr="624" mi="4" ci="0" mb="0" cb="0"/><line nr="625" mi="8" ci="0" mb="2" cb="0"/><line nr="627" mi="3" ci="0" mb="0" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="639" mi="3" ci="0" mb="0" cb="0"/><line nr="640" mi="2" ci="0" mb="0" cb="0"/><line nr="651" mi="0" ci="4" mb="0" cb="0"/><line nr="652" mi="0" ci="5" mb="0" cb="0"/><line nr="663" mi="4" ci="0" mb="0" cb="0"/><line nr="664" mi="7" ci="0" mb="0" cb="0"/><line nr="675" mi="0" ci="6" mb="0" cb="0"/><line nr="676" mi="0" ci="2" mb="0" cb="0"/><line nr="691" mi="4" ci="0" mb="0" cb="0"/><line nr="692" mi="4" ci="0" mb="0" cb="0"/><line nr="693" mi="6" ci="0" mb="0" cb="0"/><line nr="694" mi="2" ci="0" mb="0" cb="0"/><line nr="702" mi="4" ci="0" mb="0" cb="0"/><line nr="703" mi="4" ci="0" mb="0" cb="0"/><line nr="704" mi="6" ci="0" mb="0" cb="0"/><line nr="705" mi="2" ci="0" mb="0" cb="0"/><line nr="721" mi="0" ci="4" mb="0" cb="0"/><line nr="722" mi="0" ci="4" mb="0" cb="0"/><line nr="723" mi="0" ci="6" mb="0" cb="0"/><line nr="724" mi="0" ci="2" mb="0" cb="0"/><line nr="736" mi="0" ci="4" mb="0" cb="0"/><line nr="737" mi="0" ci="4" mb="0" cb="0"/><line nr="738" mi="0" ci="6" mb="0" cb="0"/><line nr="739" mi="0" ci="2" mb="0" cb="0"/><line nr="752" mi="4" ci="0" mb="0" cb="0"/><line nr="753" mi="3" ci="0" mb="0" cb="0"/><line nr="754" mi="3" ci="0" mb="0" cb="0"/><line nr="755" mi="2" ci="0" mb="0" cb="0"/><line nr="766" mi="12" ci="0" mb="4" cb="0"/><line nr="767" mi="3" ci="0" mb="0" cb="0"/><line nr="768" mi="2" ci="0" mb="0" cb="0"/><line nr="778" mi="6" ci="0" mb="0" cb="0"/><line nr="779" mi="2" ci="0" mb="0" cb="0"/><line nr="789" mi="6" ci="0" mb="0" cb="0"/><line nr="790" mi="2" ci="0" mb="0" cb="0"/><line nr="802" mi="0" ci="6" mb="0" cb="0"/><line nr="803" mi="0" ci="2" mb="0" cb="0"/><line nr="815" mi="0" ci="4" mb="0" cb="0"/><line nr="816" mi="1" ci="11" mb="2" cb="2"/><line nr="817" mi="0" ci="7" mb="0" cb="0"/><line nr="828" mi="0" ci="3" mb="0" cb="0"/><line nr="830" mi="3" ci="5" mb="1" cb="1"/><line nr="833" mi="0" ci="2" mb="0" cb="0"/><line nr="834" mi="0" ci="2" mb="0" cb="0"/><line nr="836" mi="0" ci="3" mb="0" cb="0"/><line nr="837" mi="0" ci="2" mb="0" cb="2"/><line nr="839" mi="0" ci="6" mb="0" cb="0"/><line nr="840" mi="0" ci="9" mb="0" cb="0"/><line nr="845" mi="0" ci="3" mb="0" cb="0"/><line nr="847" mi="0" ci="3" mb="0" cb="0"/><line nr="848" mi="0" ci="2" mb="0" cb="2"/><line nr="849" mi="0" ci="7" mb="0" cb="0"/><line nr="852" mi="0" ci="22" mb="0" cb="0"/><line nr="857" mi="0" ci="3" mb="0" cb="0"/><line nr="859" mi="0" ci="2" mb="0" cb="0"/><line nr="861" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="345" covered="1072"/><counter type="BRANCH" missed="36" covered="36"/><counter type="LINE" missed="72" covered="219"/><counter type="COMPLEXITY" missed="39" covered="53"/><counter type="METHOD" missed="12" covered="44"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TarXzCompressedBinaryManager.java"><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="1" cb="3"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="1" ci="8" mb="1" cb="1"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="1" cb="1"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="2" cb="0"/><line nr="121" mi="9" ci="0" mb="2" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="4" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="4" cb="0"/><line nr="136" mi="11" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="2" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="18" ci="0" mb="4" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="10" ci="0" mb="0" cb="0"/><line nr="176" mi="6" ci="0" mb="4" cb="0"/><line nr="177" mi="7" ci="0" mb="0" cb="0"/><line nr="178" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="2" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="9" ci="0" mb="2" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="13" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="19" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="13" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="2" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><line nr="217" mi="8" ci="0" mb="4" cb="0"/><line nr="218" mi="5" ci="0" mb="2" cb="0"/><line nr="219" mi="12" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="314" covered="137"/><counter type="BRANCH" missed="37" covered="5"/><counter type="LINE" missed="61" covered="27"/><counter type="COMPLEXITY" missed="25" covered="4"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="EmbeddedPostgresPreparer.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProcessOutputLogger.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="51"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmbeddedUtil.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="5" ci="7" mb="3" cb="1"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="1" ci="8" mb="1" cb="1"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="1" cb="1"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="9" mb="2" cb="4"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="1" cb="1"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="1" cb="1"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="2"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="1" cb="1"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="2"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="2"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="273"/><counter type="BRANCH" missed="12" covered="22"/><counter type="LINE" missed="14" covered="67"/><counter type="COMPLEXITY" missed="12" covered="21"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DatabaseInfo.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="16" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="23" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="101"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ZonkyIOPostgresLocator.java"><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="14" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="15" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="1" cb="1"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="2" cb="2"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="1" ci="15" mb="2" cb="2"/><line nr="72" mi="0" ci="14" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="1" cb="1"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="1" cb="1"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="114"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="6" covered="23"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AutoValue_DatabaseInfo.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="1" cb="1"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="1" cb="1"/><line nr="79" mi="0" ci="6" mb="1" cb="1"/><line nr="80" mi="0" ci="6" mb="1" cb="1"/><line nr="81" mi="0" ci="6" mb="1" cb="1"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="1" cb="1"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="1" cb="1"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="1" cb="1"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="1" cb="1"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="1" cb="1"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="3" cb="3"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="2" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="2" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="132" covered="169"/><counter type="BRANCH" missed="21" covered="21"/><counter type="LINE" missed="30" covered="48"/><counter type="COMPLEXITY" missed="20" covered="18"/><counter type="METHOD" missed="2" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="965" covered="2280"/><counter type="BRANCH" missed="123" covered="105"/><counter type="LINE" missed="207" covered="504"/><counter type="COMPLEXITY" missed="118" covered="148"/><counter type="METHOD" missed="27" covered="125"/><counter type="CLASS" missed="2" covered="17"/></package><package name="de/softwareforge/testing/postgres/junit5"><class name="de/softwareforge/testing/postgres/junit5/EmbeddedPgExtension$TestMode" sourcefilename="EmbeddedPgExtension.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lde/softwareforge/testing/postgres/embedded/DatabaseManager;)V" line="160"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager;" line="166"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="(Ljava/lang/String;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager;" line="174"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/junit5/SingleDatabaseBuilder" sourcefilename="SingleDatabaseBuilder.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instanceWithDefaults" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preparedInstance" desc="(Lde/softwareforge/testing/postgres/embedded/DatabasePreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preparedInstanceWithDefaults" desc="(Lde/softwareforge/testing/postgres/embedded/DatabasePreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preparedInstance" desc="(Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preparedInstanceWithDefaults" desc="(Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="10"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/junit5/EmbeddedPgExtension$EmbeddedPgExtensionBuilder" sourcefilename="EmbeddedPgExtension.java"><method name="&lt;init&gt;" desc="(Z)V" line="140"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lde/softwareforge/testing/postgres/junit5/EmbeddedPgExtension;" line="145"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/junit5/EmbeddedPgExtension" sourcefilename="EmbeddedPgExtension.java"><method name="&lt;init&gt;" desc="(Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiDatabase" desc="()Lde/softwareforge/testing/postgres/junit5/EmbeddedPgExtension$EmbeddedPgExtensionBuilder;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleDatabase" desc="()Lde/softwareforge/testing/postgres/junit5/EmbeddedPgExtension$EmbeddedPgExtensionBuilder;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDataSource" desc="()Ljavax/sql/DataSource;" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmbeddedPostgres" desc="()Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgres;" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDatabaseInfo" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseInfo;" line="79"><counter type="INSTRUCTION" missed="1" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeAll" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterAll" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeEach" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterEach" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$beforeEach$1" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;Ljava/lang/Object;)Lde/softwareforge/testing/postgres/junit5/EmbeddedPgExtension$TestMode;" line="119"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$beforeAll$0" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;Ljava/lang/Object;)Lde/softwareforge/testing/postgres/junit5/EmbeddedPgExtension$TestMode;" line="95"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="176"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="38"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/softwareforge/testing/postgres/junit5/MultiDatabaseBuilder" sourcefilename="MultiDatabaseBuilder.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instanceWithDefaults" desc="()Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preparedInstance" desc="(Lde/softwareforge/testing/postgres/embedded/DatabasePreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preparedInstanceWithDefaults" desc="(Lde/softwareforge/testing/postgres/embedded/DatabasePreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preparedInstance" desc="(Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preparedInstanceWithDefaults" desc="(Lde/softwareforge/testing/postgres/embedded/EmbeddedPostgresPreparer;)Lde/softwareforge/testing/postgres/embedded/DatabaseManager$Builder;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="10"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EmbeddedPgExtension.java"><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="7" mb="1" cb="1"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="1" cb="1"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="1" cb="1"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="1" cb="1"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="2"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="2"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="242"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="56"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="MultiDatabaseBuilder.java"><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="10"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleDatabaseBuilder.java"><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="10"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="51" covered="262"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="13" covered="60"/><counter type="COMPLEXITY" missed="15" covered="24"/><counter type="METHOD" missed="11" covered="22"/><counter type="CLASS" missed="0" covered="5"/></package><counter type="INSTRUCTION" missed="1016" covered="2542"/><counter type="BRANCH" missed="127" covered="113"/><counter type="LINE" missed="220" covered="564"/><counter type="COMPLEXITY" missed="133" covered="172"/><counter type="METHOD" missed="38" covered="147"/><counter type="CLASS" missed="2" covered="22"/></report>